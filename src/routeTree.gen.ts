/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as UserIndexImport } from './routes/user/index'
import { Route as BountyIndexImport } from './routes/bounty/index'
import { Route as UserActiveBountiesImport } from './routes/user/activeBounties'
import { Route as BountyCreateImport } from './routes/bounty/create'
import { Route as BountyBountyIdImport } from './routes/bounty/$bountyId'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserIndexRoute = UserIndexImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => rootRoute,
} as any)

const BountyIndexRoute = BountyIndexImport.update({
  id: '/bounty/',
  path: '/bounty/',
  getParentRoute: () => rootRoute,
} as any)

const UserActiveBountiesRoute = UserActiveBountiesImport.update({
  id: '/user/activeBounties',
  path: '/user/activeBounties',
  getParentRoute: () => rootRoute,
} as any)

const BountyCreateRoute = BountyCreateImport.update({
  id: '/bounty/create',
  path: '/bounty/create',
  getParentRoute: () => rootRoute,
} as any)

const BountyBountyIdRoute = BountyBountyIdImport.update({
  id: '/bounty/$bountyId',
  path: '/bounty/$bountyId',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/bounty/$bountyId': {
      id: '/bounty/$bountyId'
      path: '/bounty/$bountyId'
      fullPath: '/bounty/$bountyId'
      preLoaderRoute: typeof BountyBountyIdImport
      parentRoute: typeof rootRoute
    }
    '/bounty/create': {
      id: '/bounty/create'
      path: '/bounty/create'
      fullPath: '/bounty/create'
      preLoaderRoute: typeof BountyCreateImport
      parentRoute: typeof rootRoute
    }
    '/user/activeBounties': {
      id: '/user/activeBounties'
      path: '/user/activeBounties'
      fullPath: '/user/activeBounties'
      preLoaderRoute: typeof UserActiveBountiesImport
      parentRoute: typeof rootRoute
    }
    '/bounty/': {
      id: '/bounty/'
      path: '/bounty'
      fullPath: '/bounty'
      preLoaderRoute: typeof BountyIndexImport
      parentRoute: typeof rootRoute
    }
    '/user/': {
      id: '/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/bounty/$bountyId': typeof BountyBountyIdRoute
  '/bounty/create': typeof BountyCreateRoute
  '/user/activeBounties': typeof UserActiveBountiesRoute
  '/bounty': typeof BountyIndexRoute
  '/user': typeof UserIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/bounty/$bountyId': typeof BountyBountyIdRoute
  '/bounty/create': typeof BountyCreateRoute
  '/user/activeBounties': typeof UserActiveBountiesRoute
  '/bounty': typeof BountyIndexRoute
  '/user': typeof UserIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/bounty/$bountyId': typeof BountyBountyIdRoute
  '/bounty/create': typeof BountyCreateRoute
  '/user/activeBounties': typeof UserActiveBountiesRoute
  '/bounty/': typeof BountyIndexRoute
  '/user/': typeof UserIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/bounty/$bountyId'
    | '/bounty/create'
    | '/user/activeBounties'
    | '/bounty'
    | '/user'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/bounty/$bountyId'
    | '/bounty/create'
    | '/user/activeBounties'
    | '/bounty'
    | '/user'
  id:
    | '__root__'
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/bounty/$bountyId'
    | '/bounty/create'
    | '/user/activeBounties'
    | '/bounty/'
    | '/user/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  BountyBountyIdRoute: typeof BountyBountyIdRoute
  BountyCreateRoute: typeof BountyCreateRoute
  UserActiveBountiesRoute: typeof UserActiveBountiesRoute
  BountyIndexRoute: typeof BountyIndexRoute
  UserIndexRoute: typeof UserIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  BountyBountyIdRoute: BountyBountyIdRoute,
  BountyCreateRoute: BountyCreateRoute,
  UserActiveBountiesRoute: UserActiveBountiesRoute,
  BountyIndexRoute: BountyIndexRoute,
  UserIndexRoute: UserIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/login",
        "/auth/register",
        "/bounty/$bountyId",
        "/bounty/create",
        "/user/activeBounties",
        "/bounty/",
        "/user/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/bounty/$bountyId": {
      "filePath": "bounty/$bountyId.tsx"
    },
    "/bounty/create": {
      "filePath": "bounty/create.tsx"
    },
    "/user/activeBounties": {
      "filePath": "user/activeBounties.tsx"
    },
    "/bounty/": {
      "filePath": "bounty/index.tsx"
    },
    "/user/": {
      "filePath": "user/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
